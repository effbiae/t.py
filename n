#!/usr/bin/python3
import a,n,sys;from p import p;from numpy import *;P=a.P;v1=sys.argv[1]if len(sys.argv)>1 else''
ax=lambda x:not isinstance(x,ndarray);set_printoptions(precision=3);v={}
lg=lambda x,f,e:(print(x,file=f,end=e),f.flush());
[exec(f'{_}=open("{_}","w");{_[0]}l=lambda x:lg(x,{_},None)',globals())for _ in('log','glog')]
O=lambda x:lg(x,sys.stdout,'')
ev=lambda s,m:m.pk(e(p(s),m));err=lambda x:type(x)is tuple
def il(c,x):
    if(c):return x()
def lm(f,x):return list(map(f,x))
def e(x,m):
 if x[0]=='[':return lm(lambda x:e(x,m),x[1:])[-1]
 if x[0]=='0':return([m.te,m.ti][type(x[1])==int](x[1]))
 if type(x)==str and x.isalpha():return m.r_(v[(m,x)])
 if (p:=P.find(x[0]))>0:y=m.k(p,e(x[1],m)if x[1] else None,e(x[2],m));return y
 if p==0:
  k=(m,x[1]);il(k in v,lambda:m._r(v[k]));v[k]=e(x[2],m);return m.r_(v[k])#check for error and don't assign
ow=1
def sm(x):
 l='\n'if not ax(x)and len(x.shape)>1 and not ow else''
 s=l+(':'if not ow else '\t')+l+(str(x)if not err(x)else 'err '+str(x[0]))
 return s.replace('\n','|').replace('[','').replace(']','')if ow else s
def main():
 while 1:
  O(' 'if sys.stdin.isatty()else'');x=sys.stdin.readline().strip()
  if not x:return
  ll(x);ov and print('', x)
  ks=[e(p(x),m)for m in(a,n)] #why r_?
  if not a.err(ks[0]):gl(x)
  ks=[m.pk(_)for m,_ in zip((a,n),ks)]
  if not n.k2('~',*ks):ov and print('disagree',x,'\t'.join([sm(k)for k in ks]))
  else:print(ks[0])
  sys.stdout.flush()
if __name__=='__main__':
 [exec(f"o{_}={_ in v1}",globals())for _ in 'vp']
 main()
