#!/usr/bin/python3
import a,n,sys,pickle,p;p=p.p;P=a.P;from numpy import *;v1=sys.argv[1]if len(sys.argv)>1 else''
set_printoptions(precision=3);v={};lg=lambda x,f,e:(print(x,file=f,end=e),f.flush());
[exec(f'{_}=open("{_}","w");{_[0]}l=lambda x:lg(x,{_},None)',globals())for _ in('log','glog')]
O=lambda x:lg(x,sys.stdout,'');ev=lambda s,m:m.pk(e(p(s),m));err=lambda x:type(x)is tuple
def seq(x,m):
 r=None
 for a in x:
  o=e(a,m);r is not None and m._r(r);
  if m.err(o):return o
  r=o
 return r
def e(x,m):
 if x[0]=='[':return seq(x[1:],m)
 if x[0]=='0':return([m.te,m.ti][type(x[1])==int](x[1]))
 if type(x)==str and x.isalpha():return m.r_(v[(m,x)])
 if (p:=P.find(x[0]))>0:
  if x[1]:
   a=e(x[1],m)
   if m.err(a):return a
   b=e(x[2],m)
   if m.err(b):m._r(a);return b
   return m.k(p,a,b)
  else:a=e(x[2],m);return a if m.err(a) else m.k(p,None,a)
 if p==0:
  k=(m,x[1]);o=e(x[2],m);
  if m.err(o):return o
  k in v and m._r(v[k]);v[k]=o;return m.r_(o)
def sm(x):
 l='\n'if not err(x)and len(x.shape)>1 and not ow else''
 s=l+(':'if not ow else '\t')+l+(str(x)if not err(x)else 'err '+str(x[0]))
 return s.replace('\n','|').replace('[','').replace(']','')if ow else s
f=sys.stdin
def main():
 op and (pf:=open('p','wb'))
 while 1:
  O(' 'if f.isatty()else'');x=f.readline()
  if not x:break
  x=x.strip();ll(x);ov and print('',x);ks=[e(p(x),m)for m in(a,n)]
  if not a.err(ks[0]):gl(x)
  ks=tuple([m.pk(_)for m,_ in zip((a,n),ks)])
  if not n.ma(*ks):
   ov and print('disagree',x,'\t'.join([sm(k)for k in ks]))
   op and (o:=(x,)+ks,pickle.dump(o,pf),pf.flush())
   not oq and print('!')
  else:not oq and print(ks[0])
  O('')
 op and pf.close()
if __name__=='__main__':
 [exec(f"o{_}={_ in v1}",globals())for _ in 'vpqw']
 if len(sys.argv)>2:f=open(sys.argv[2])
 main()
